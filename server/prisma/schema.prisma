datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime    @default(now())
  firstName String?
  id        String      @id @default(cuid())
  lastName  String?
  password  String
  roles     String[]
  updatedAt DateTime    @updatedAt
  username  String      @unique
  Project   Project[]
  Task      Task[]
  Timesheet Timesheet[]
}

model Project {
  createdAt   DateTime    @default(now())
  description String?
  dueDate     DateTime?
  id          String      @id @default(cuid())
  name        String?
  owner       User        @relation(fields: [userId], references: [id])
  startDate   DateTime?
  updatedAt   DateTime    @updatedAt
  Task        Task[]
  Timesheet   Timesheet[]
  userId      String
}

model Task {
  assignedTo User?          @relation(fields: [userId], references: [id])
  createdAt  DateTime       @default(now())
  estimation Int?
  id         String         @id @default(cuid())
  project    Project        @relation(fields: [projectId], references: [id])
  startDate  DateTime
  status     EnumTaskStatus
  title      String
  updatedAt  DateTime       @updatedAt
  userId     String?
  projectId  String
}

model Timesheet {
  createdAt   DateTime @default(now())
  date        DateTime
  description String
  id          String   @id @default(cuid())
  project     Project  @relation(fields: [projectId], references: [id])
  time        String
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  projectId   String
  userId      String
}

enum EnumTaskStatus {
  new
  pending
  onHold
  ongoing
  done
}